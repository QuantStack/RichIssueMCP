[build-system]
requires = [
    "hatchling",
    "editables"]
build-backend = "hatchling.build"

[project]
name = "trigent"
dynamic = ["version"]
description = "A GitHub issue triaging agent using AI-powered analysis"
readme = "README.md"
license = "MIT"
requires-python = ">=3.12"
authors = [
    { name = "QuantStack" }
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "fastmcp>=0.4.0",
    "pydantic>=2.8.0",
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "requests>=2.28.0",
    "ipython>=9.5.0",
    "ipdb>=0.13.13",
    "toml>=0.10.0",
    "scikit-learn>=1.7.2",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.6.0",
    "black>=24.0.0",
    "mypy>=1.11.0",
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
]


[tool.hatch.version]
path = "trigent/mcp/__init__.py"

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
]

[tool.ruff.isort]
known-first-party = ["trigent.pull", "trigent.enrich", "trigent.mcp", "trigent.cli"]

[tool.hatch.build.targets.wheel]
packages = ["trigent"]

[project.scripts]
trigent = "trigent.cli.cli:main"

[tool.black]
target-version = ["py311"]
line-length = 88

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
